install.packages("randomForest")
install.packages("ggplot2")
library(tidyverse)
library(broom)
# Set WD automatically to where the R scrip is
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Check the wd
getwd()
df.vil <- dplyr::tbl_df(readRDS("./data/village_data.rds"))
class(df.vil)
df.liv <- dplyr::tbl_df(readRDS("./data/livelihood_data.rds"))
class(df.liv)
df.vil$PK %in% df.liv$FK
df.vil$PK[!df.vil$PK %in% df.liv$FK]
View(df.vil)
View(df.vil)
rm(list = ls())
# Set WD automatically to where the R scrip is
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
df.vil = read.csv("./data/mfr_village_post13_all.csv", stringsAsFactors = F)
df.liv = read.csv("./data/mfr_livelihood_post13_all.csv", stringsAsFactors = F)
df.liv = read.csv("./data/mfr_livelihood_post13_all2.csv", stringsAsFactors = F)
## VILLAGE
df.vil <- tidyr::separate(data=df.vil,
col=wkt_geom,
into=c("delete", "Longitude","Latitude"),
sep=" ",
remove=FALSE)
df.vil$Latitude <- stringr::str_replace_all(df.vil$Latitude, "[)]", "")
df.vil$Longitude <- stringr::str_replace_all(df.vil$Longitude, "[()]", "")
df.vil$Latitude <- as.numeric(df.vil$Latitude)
df.vil$Longitude <- as.numeric(df.vil$Longitude)
village_data <-  subset(df.vil, select=-c(wkt_geom,delete,GID)) ## Delete the columns that we don't need ## in case you want to subset your dataset df[c(1:1000),]
saveRDS(village_data, "./data/village_data.rds")
rm(village_data) # keep the environment tidy
## LIVELIHOOD
df.liv <- tidyr::separate(data=df.liv,
col=wkt_geom,
into=c("delete", "Longitude","Latitude"),
sep=" ",
remove=FALSE)
df.liv$Latitude <- stringr::str_replace_all(df.liv$Latitude, "[)]", "")
df.liv$Longitude <- stringr::str_replace_all(df.liv$Longitude, "[()]", "")
df.liv$Latitude <- as.numeric(df.liv$Latitude)
df.liv$Longitude <- as.numeric(df.liv$Longitude)
livelihood_data <-  subset(df.liv, select=-c(wkt_geom,delete)) ## in case you want to subset your dataset df[c(1:1000),]
saveRDS(livelihood_data, "./data/livelihood_data.rds")
rm(livelihood_data) # keep the environment tidy
# Set WD automatically to where the R scrip is
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Check the wd
getwd()
df.vil <- dplyr::tbl_df(readRDS("./data/village_data.rds"))
class(df.vil)
df.liv <- dplyr::tbl_df(readRDS("./data/livelihood_data.rds"))
class(df.liv)
df.vil$PK[!df.vil$PK %in% df.liv$FK]
df.vil$PK[!df.vil$PK %in% df.liv$FK,] # villages not included
df.vil[!df.vil$PK %in% df.liv$FK] # villages not included
x <- df.vil[!df.vil$PK %in% df.liv$FK] # villages not included
df.vil$PK[!df.vil$PK %in% df.liv$FK] # villages not included
df.vil[df.vil$PK %in% df.liv$FK] # villages not included
df.vil[df.vil$PK %in% df.liv$FK, ] # villages not included
$PK
df.vil$PK[!df.vil$PK %in% df.liv$FK] # villages not included
df.vil_red <- df.vil$PK[df.vil$PK %in% df.liv$FK, ] # villages included
df.vil_red <- df.vil[df.vil$PK %in% df.liv$FK, ] # villages included
df.vil_red$PK[!df.vil_red$PK %in% df.liv$FK] # villages not included
df.vil_red <- df.vil %>%
.[df.vil$PK %in% df.liv$FK, ] # villages included
df.vil_red <- df.vil %>%
.[df.vil$PK %in% df.liv$FK, c(PK,Longitude,Latitude) ] # %>% # villages included
df.vil_red2 <- df.vil_red[, c(PK,Longitude,Latitude) ]
df.vil_red <- df.vil %>%
.[df.vil$PK %in% df.liv$FK, ] %>%  # villages included
.seclect (PK,Longitude,Latitude)
df.vil_red <- df.vil %>%
.[df.vil$PK %in% df.liv$FK, ] %>%  # villages included
seclect (PK,Longitude,Latitude)
?select
df.vil_red <- df.vil %>%
.[df.vil$PK %in% df.liv$FK, ] %>%  # villages included
seclect (.,PK,Longitude,Latitude)
df.vil_red <- df.vil %>%
.[df.vil$PK %in% df.liv$FK, ] %>%  # villages included
select (.,PK,Longitude,Latitude)
View(df.vil_red)
df.vil_red <- df.vil %>%
.[df.vil$PK %in% df.liv$FK, ] %>%  # villages included
rename(Longitude=Longitude.vil, Latitude=Latitude.vil) %>%
select (.,PK,Longitude,Latitude)
df.vil_red <- df.vil %>%
.[df.vil$PK %in% df.liv$FK, ] %>%  # villages included
rename(Longitude=Longitude_vil, Latitude=Latitude_vil) %>%
select (.,PK,Longitude,Latitude)
df.vil_red <- df.vil %>%
.[df.vil$PK %in% df.liv$FK, ] %>%  # villages included
rename(Longitude=Longitude_vil) %>%
select (.,PK,Longitude,Latitude)
df.vil_red <- df.vil %>%
.[df.vil$PK %in% df.liv$FK, ] %>%  # villages included
rename(.,Longitude=Longitude_vil, Latitude=Latitude_vil) %>%
select (.,PK,Longitude,Latitude)
?rename
df.vil_red <- df.vil %>%
.[df.vil$PK %in% df.liv$FK, ] %>%  # villages included
select (.,PK,Longitude=Longitude_vil,Latitude=Latitude_vil)
df.vil_red <- df.vil %>%
.[df.vil$PK %in% df.liv$FK, ] %>%  # villages included
select (.,PK,Longitude,Latitude)
df.vil_red2 <- rename(df.vil_red, Longitude = longitude.vil )
df.vil_red2 <- rename(df.vil_red, Longitude = "longitude.vil" )
df.vil_red2 <- rename(df.vil_red, Longitude = longitude )
class(df.vil_red)
df.vil_red2 <- df.vil_red %>% rename(Longitude = longitude )
df.vil_red <- df.vil %>%
.[df.vil$PK %in% df.liv$FK, ] %>%  # villages included
rename(.,longitude.vil = Longitude ) %>%
select (.,PK,Longitude,Latitude)
df.vil_red <- df.vil %>%
.[df.vil$PK %in% df.liv$FK, ] %>%  # villages included
rename(longitude.vil = Longitude ) %>%
select (.,PK,Longitude,Latitude)
df.vil_red <- df.vil %>%
.[df.vil$PK %in% df.liv$FK, ] %>%  # villages included
select (.,PK,Longitude,Latitude)
df.vil_red2 <- df.vil_red %>% rename(Longitude.vil = Longitude )
df.vil_red <- df.vil_red %>% rename(Longitude.vil = Longitude, Latitude.vil = Latitude)
rm(df.vil_red2)
df.liv_mer <- merge(df.liv,df.vil_red, FK = PK)
df.vil = read.csv("./data/mfr_village_post13_all.csv", stringsAsFactors = F)
df.liv = read.csv("./data/mfr_livelihood_post13_all2.csv", stringsAsFactors = F)
## VILLAGE
df.vil <- tidyr::separate(data=df.vil,
col=wkt_geom,
into=c("delete", "Longitude","Latitude"),
sep=" ",
remove=FALSE)
df.vil$Latitude <- stringr::str_replace_all(df.vil$Latitude, "[)]", "")
df.vil$Longitude <- stringr::str_replace_all(df.vil$Longitude, "[()]", "")
df.vil$Latitude <- as.numeric(df.vil$Latitude)
df.vil$Longitude <- as.numeric(df.vil$Longitude)
village_data <-  subset(df.vil, select=-c(wkt_geom,delete,GID)) ## Delete the columns that we don't need ## in case you want to subset your dataset df[c(1:1000),]
saveRDS(village_data, "./data/village_data.rds")
rm(village_data) # keep the environment tidy
## LIVELIHOOD
df.liv <- tidyr::separate(data=df.liv,
col=wkt_geom,
into=c("delete", "Longitude","Latitude"),
sep=" ",
remove=FALSE)
df.liv$Latitude <- stringr::str_replace_all(df.liv$Latitude, "[)]", "")
df.liv$Longitude <- stringr::str_replace_all(df.liv$Longitude, "[()]", "")
df.liv$Latitude <- as.numeric(df.liv$Latitude)
df.liv$Longitude <- as.numeric(df.liv$Longitude)
livelihood_data <-  subset(df.liv, select=-c(wkt_geom,delete)) ## in case you want to subset your dataset df[c(1:1000),]
saveRDS(livelihood_data, "./data/livelihood_data.rds")
rm(livelihood_data) # keep the environment tidy
df.vil <- dplyr::tbl_df(readRDS("./data/village_data.rds"))
class(df.vil)
df.liv <- dplyr::tbl_df(readRDS("./data/livelihood_data.rds"))
class(df.liv)
?subset
df.vil %>% subset(., LOCALITY_6 = "CAM")
unique(df.vil$LOCALITY_6)
df.vil_cam <- subset(df.vil, LOCALITY_6 = "CAM")
unique(df.vil_cam$LOCALITY_6)
rm(df.vil_cam)
df.vil_cam <- subset(df.vil, LOCALITY_6 = CAM)
rm(df.vil_cam)
df.vil_cam <- subset(df.vil, LOCALITY_6 == CAM)
df.vil_cam <- subset(df.vil, LOCALITY_6 == "CAM")
unique(df.vil_cam$LOCALITY_6)
df.liv_cam <- subset(df.liv, COUNTRY == "CAM")
df.vil <- subset(df.vil, LOCALITY_6 == "CAM")
df.liv <- subset(df.liv, COUNTRY == "CAM")
rm(df.vil_cam)
rm(df.liv_cam)
df.vil$PK %in% df.liv$FK # full list of included and excluded
df.vil$PK[!df.vil$PK %in% df.liv$FK] # villages not included
df.vil_red <- df.vil %>%
.[df.vil$PK %in% df.liv$FK, ] %>%  # villages included
select (.,PK,Longitude,Latitude)
df.vil_red <- df.vil_red %>% rename(Longitude.vil = Longitude, Latitude.vil = Latitude)
df.liv_mer <- merge(df.liv,df.vil_red, FK = PK)
View(df.liv_mer)
View(df.liv_mer)
## Merge using the coordinates the two points we want to check the distance from
df.vil_red$PK[!df.vil_red$PK %in% df.liv$FK]
?merge
df.liv_mer <- merge(df.liv,df.vil_red, by.x = "FK", by.y = "PK")
View(df.liv_mer)
View(df.liv_mer)
View(df.vil)
View(df.vil)
df.vil <- dplyr::tbl_df(readRDS("./data/village_data.rds"))
class(df.vil)
df.liv <- dplyr::tbl_df(readRDS("./data/livelihood_data.rds"))
class(df.liv)
df.vil_red <- df.vil %>%
.[df.vil$PK %in% df.liv$FK, ] %>%  # villages included
select (.,PK,Longitude,Latitude)
df.vil_red <- df.vil_red %>% rename(Longitude.vil = Longitude, Latitude.vil = Latitude)
df.liv_mer <- merge(df.liv,df.vil_red, by.x = "FK", by.y = "PK")
library(raster)
?pointDistance
?mutate
?pointDistance
